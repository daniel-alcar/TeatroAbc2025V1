CREATE DATABASE IF NOT EXISTS TEATRO_ABC;
USE TEATRO_ABC;

CREATE TABLE IF NOT EXISTS USUARIOS (
	ID_USUARIOS INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100),
    CPF VARCHAR(14) UNIQUE,
    DATANASCIMENTO DATE,
    TELEFONE VARCHAR(20),
    LOGRADOURO VARCHAR(100),
    BAIRRO VARCHAR(50),
    CEP VARCHAR(10),
	CIDADE VARCHAR(50),
	UF CHAR(2)
);

CREATE TABLE IF NOT EXISTS PECA (
	ID_PECA INT AUTO_INCREMENT PRIMARY KEY,
    TITULO VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS SESSAO (
	ID_SESSAO INT AUTO_INCREMENT PRIMARY KEY,
    PERIODO VARCHAR(20) NOT NULL,
    PECA_ID INT NOT NULL,
    FOREIGN KEY (PECA_ID) REFERENCES PECA(ID_PECA)
);

CREATE TABLE IF NOT EXISTS AREA (
	ID_AREA INT AUTO_INCREMENT PRIMARY KEY,
    TITULO VARCHAR(100) NOT NULL,
	CAPACIDADE INT NOT NULL,
	PRECO DOUBLE NOT NULL
);

CREATE TABLE IF NOT EXISTS SESSAO_AREA (
	ID INT AUTO_INCREMENT PRIMARY KEY,
	SESSAO_ID INT NOT NULL,
	AREA_ID INT NOT NULL,
    FOREIGN KEY (SESSAO_ID) REFERENCES SESSAO(ID_SESSAO),
    FOREIGN KEY (AREA_ID) REFERENCES AREA(ID_AREA)
);

CREATE TABLE IF NOT EXISTS VENDAINGRESSO (
	ID_VENDAINGRESSO INT AUTO_INCREMENT PRIMARY KEY,
    CPF_USUARIO VARCHAR(14),
    AREA_ID INT,
    SESSAO_ID INT,
    PECA_ID INT,
    POLTRONA INT,
    FOREIGN KEY (CPF_USUARIO) REFERENCES USUARIOS(CPF),
    FOREIGN KEY (AREA_ID) REFERENCES AREA(ID_AREA),
    FOREIGN KEY (SESSAO_ID) REFERENCES SESSAO(ID_SESSAO),
    FOREIGN KEY (PECA_ID) REFERENCES PECA(ID_PECA)
);

#INSERT INTO PECA (TITULO) VALUES 
#('Patrulha Canina'),  -- ID 1
#('Aladdin'),          -- ID 2
#('Cisne Negro');      -- ID 3

-- Patrulha Canina (ID_PECA = 1)
#INSERT INTO SESSAO (PERIODO, PECA_ID) VALUES 
#('Manh達', 1),
#('Tarde', 1),
#('Noite', 1);

-- Aladdin (ID_PECA = 2)
#INSERT INTO SESSAO (PERIODO, PECA_ID) VALUES 
#('Manh達', 2),
#('Tarde', 2),
#('Noite', 2);

-- Cisne Negro (ID_PECA = 3)
#INSERT INTO SESSAO (PERIODO, PECA_ID) VALUES 
#('Manh達', 3),
#('Tarde', 3),
#('Noite', 3); 

#INSERT INTO AREA (TITULO, CAPACIDADE, PRECO) VALUES
#('Platea A', 25, 40.0),
#('Platea B', 100, 60.0),
#('Camarote 01', 10, 80.0),
#('Camarote 02', 10, 80.0),
#('Camarote 03', 10, 80.0),
#('Camarote 04', 10, 80.0),
#('Camarote 05', 10, 80.0),
#('Frisa 1', 5, 120.0),
#('Frisa 2', 5, 120.0),
#('Frisa 3', 5, 120.0),
#('Frisa 4', 5, 120.0),
#('Frisa 5', 5, 120.0),
#('Frisa 6', 5, 120.0),
#('Balc達o', 50, 250.0);

	-- SCRIPT PARA VINCULAR AREAS COM SESSOES @ RODAR SEMPRE QUE ATUALIZAR O NUMERO DE AREAS E SESSOES --

#INSERT INTO SESSAO_AREA (SESSAO_ID, AREA_ID)
#SELECT s.ID_SESSAO, a.ID_AREA
#FROM SESSAO s
#CROSS JOIN AREA a;

SELECT * FROM USUARIOS;
SELECT * FROM SESSAO_AREA;
SELECT * FROM VENDAINGRESSO;
SELECT * FROM area WHERE ID_AREA = id_area;

SELECT 
    U.NOME,
    COUNT(A.PRECO) AS TOTAL_COMPRADO
FROM VENDAINGRESSO V
JOIN USUARIOS U ON V.CPF_USUARIO = U.CPF
JOIN AREA A ON V.AREA_ID = A.ID_AREA
GROUP BY U.NOME;

SELECT * FROM SESSAO;

SELECT 
	P.TITULO,
    count(*) AS TOTAL
FROM VENDAINGRESSO V
JOIN PECA P ON V.PECA_ID = P.ID_PECA
GROUP BY TITULO
ORDER BY TOTAL DESC
LIMIT 1;

SELECT 
	P.TITULO,
    COUNT(*) AS TOTAL
FROM VENDAINGRESSO V
JOIN PECA P ON V.PECA_ID = P.ID_PECA
GROUP BY TITULO
ORDER BY TOTAL ASC
LIMIT 1;

SELECT 
	S.PERIODO,
	COUNT(*) AS SESSAO_TOTAL
FROM VENDAINGRESSO V
JOIN SESSAO S ON V.SESSAO_ID = S.ID_SESSAO
GROUP BY PERIODO
ORDER BY SESSAO_TOTAL DESC
LIMIT 1;
	
SELECT 
	S.PERIODO,
	COUNT(*) AS SESSAO_TOTAL
FROM VENDAINGRESSO V
JOIN SESSAO S ON V.SESSAO_ID = S.ID_SESSAO
GROUP BY PERIODO
ORDER BY SESSAO_TOTAL ASC
LIMIT 1;

SELECT 
    P.TITULO,
    SUM(A.PRECO) AS TOTAL
FROM VENDAINGRESSO V
JOIN PECA P ON V.PECA_ID = P.ID_PECA
JOIN AREA A ON V.AREA_ID = A.ID_AREA
GROUP BY P.TITULO
ORDER BY TOTAL DESC
LIMIT 1;

SELECT 
    COUNT(*) AS TOTAL_VENDAS,
    AVG(A.PRECO) AS FATURAMENTO_MEDIO
FROM VENDAINGRESSO V
JOIN AREA A ON V.AREA_ID = A.ID_AREA;